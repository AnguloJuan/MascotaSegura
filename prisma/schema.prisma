generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model estado {
  id        Int         @id @default(autoincrement())
  nombre    String      @unique
  municipio municipio[]
}

model municipio {
  id        Int         @id @default(autoincrement())
  nombre    String      @unique
  idEstado  Int
  adoptante adoptante[]
  estado    estado      @relation(fields: [idEstado], references: [id])
  refugio   refugio[]
  reporte   reporte[]
}

model refugio {
  id          Int        @id @default(autoincrement())
  nombre      String?
  espacios    Int?
  fechaCreada DateTime   @default(now())
  idMunicipio Int
  adopcion    adopcion[]
  espacio     espacios[]
  mascotas    mascota[]
  municipio   municipio  @relation(fields: [idMunicipio], references: [id])
}

model adoptante {
  id                Int                 @id @default(autoincrement())
  nombre            String
  apellido          String
  correo            String              @unique
  telefono          BigInt
  contrasena        String
  fechaRegistro     DateTime            @default(now())
  idMunicipio       Int
  idTipoUsuario     Int
  imagen            String?
  adopcion          adopcion[]
  municipio         municipio           @relation(fields: [idMunicipio], references: [id])
  tipoUsuario       tipoUsuario         @relation(fields: [idTipoUsuario], references: [id])
  historialAdoptivo historialAdoptivo[]
  reportado         reporte[]           @relation("reportado")
  reportador        reporte[]           @relation("reportador")
}

model empleado {
  id            Int         @id @default(autoincrement())
  idRefugio     Int
  nombre        String
  apellido      String
  correo        String      @unique
  contrasena    String
  telefono      BigInt
  NIP           String
  fechaRegistro DateTime    @default(now())
  idTipoUsuario Int
  imagen        String?
  tipoUsuario   tipoUsuario @relation(fields: [idTipoUsuario], references: [id])
}

model tipoUsuario {
  id        Int         @id
  usuario   String
  adoptante adoptante[]
  empleado  empleado[]
}

model historialAdoptivo {
  id          Int       @id @default(autoincrement())
  idMascota   Int
  idAdoptante Int
  motivo      String?   @default("Sin motivo espec√≠fico")
  adoptante   adoptante @relation(fields: [idAdoptante], references: [id])
  mascota     mascota   @relation(fields: [idMascota], references: [id])
}

model sexo {
  id      Int       @id
  sexo    String
  mascota mascota[]
}

model mascota {
  id                Int                 @id @default(autoincrement())
  nombre            String?
  edad              Int?
  meses             Int?
  maltratado        Boolean             @default(false)
  fechaRegistro     DateTime            @default(now())
  imagen            String?
  idRefugio         Int?
  cartilla          Boolean             @default(false)
  motivo            String?
  idSexo            Int
  idTamano          Int?                @default(1)
  idEspecie         Int
  idRaza            Int?
  adopcion          adopcion?
  historialAdoptivo historialAdoptivo[]
  especie           especie             @relation(fields: [idEspecie], references: [id])
  raza              raza?               @relation(fields: [idRaza], references: [id])
  refugio           refugio?            @relation(fields: [idRefugio], references: [id])
  sexo              sexo                @relation(fields: [idSexo], references: [id])
  tamano            tamano?             @relation(fields: [idTamano], references: [id])
  victima           reporte[]
}

model adopcion {
  id               Int            @id @default(autoincrement())
  fechaCreada      DateTime       @default(now())
  idAdoptante      Int
  idMascota        Int            @unique
  idRefugio        Int
  idEstadoAdopcion Int
  adoptante        adoptante      @relation(fields: [idAdoptante], references: [id])
  estadoAdopcion   estadoAdopcion @relation(fields: [idEstadoAdopcion], references: [id])
  mascota          mascota        @relation(fields: [idMascota], references: [id])
  refugio          refugio        @relation(fields: [idRefugio], references: [id])
}

model estadoReporte {
  id      Int       @id
  estado  String
  reporte reporte[]
}

model reporte {
  id              Int           @id @default(autoincrement())
  descripcion     String
  fechaCreada     DateTime      @default(now())
  idReportador    Int?
  idReportado     Int?
  idMascota       Int?
  idMunicipio     Int
  imagen          String?
  nombre          String?
  correo          String?
  estadoReporteId Int           @default(1)
  estadoReporte   estadoReporte @relation(fields: [estadoReporteId], references: [id])
  mascota         mascota?      @relation(fields: [idMascota], references: [id])
  municipio       municipio     @relation(fields: [idMunicipio], references: [id])
  reportado       adoptante?    @relation("reportado", fields: [idReportado], references: [id])
  reportador      adoptante?    @relation("reportador", fields: [idReportador], references: [id])
}

model especie {
  id       Int        @id
  especie  String     @unique
  espacios espacios[]
  mascota  mascota[]
  raza     raza[]
}

model raza {
  id        Int       @id
  raza      String    @unique
  idEspecie Int?
  mascota   mascota[]
  especie   especie?  @relation(fields: [idEspecie], references: [id])
}

model espacios {
  id                Int     @id
  espacioTotal      Int
  espacioDisponible Int
  idEspecie         Int
  idRefugio         Int
  especie           especie @relation(fields: [idEspecie], references: [id])
  refugio           refugio @relation(fields: [idRefugio], references: [id])
}

model estadoAdopcion {
  id             Int        @id
  estadoAdopcion String
  adopcion       adopcion[]
}

model tamano {
  id      Int       @id
  tamano  String
  mascota mascota[]
}
